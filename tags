!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$BAT_THEME	init.vim	/^let $BAT_THEME='gruvbox'$/;"	v
(	init.vim	/^nmap ( <plug>Argumentative_MoveLeft$/;"	m
)	init.vim	/^nmap ) <plug>Argumentative_MoveRight$/;"	m
/	init.vim	/^map  \/ <Plug>(easymotion-sn)$/;"	m
/	init.vim	/^omap \/ <Plug>(easymotion-tn)$/;"	m
030|	.\Session.vim	/^normal! 030|$/;"	m
046|	.\Session.vim	/^normal! 046|$/;"	m
09|	.\Session.vim	/^normal! 09|$/;"	m
2fd	init.vim	/^nnoremap 2fd :e#2<CR>$/;"	m
3fd	init.vim	/^nnoremap 3fd :e#3<CR>$/;"	m
4fd	init.vim	/^nnoremap 4fd :e#4<CR>$/;"	m
5fd	init.vim	/^nnoremap 5fd :e#5<CR>$/;"	m
6fd	init.vim	/^nnoremap 6fd :e#6<CR>$/;"	m
7fd	init.vim	/^nnoremap 7fd :e#7<CR>$/;"	m
8fd	init.vim	/^nnoremap 8fd :e#8<CR>$/;"	m
9fd	init.vim	/^nnoremap 9fd :e#9<CR>$/;"	m
;	init.vim	/^nnoremap ; <tab>| nnoremap <tab> ;$/;"	m
;	init.vim	/^noremap ; l$/;"	m
;	init.vim	/^vnoremap ; <tab>| vnoremap <tab> ;$/;"	m
<A-;>	init.vim	/^nmap <silent> <A-;> :lua require('smart-splits').resize_right()<CR>$/;"	m
<A-j>	init.vim	/^nmap <silent> <A-j> :lua require('smart-splits').resize_left()<CR>$/;"	m
<A-k>	init.vim	/^nmap <silent> <A-k> :lua require('smart-splits').resize_down()<CR>$/;"	m
<A-l>	init.vim	/^nmap <silent> <A-l> :lua require('smart-splits').resize_up()<CR>$/;"	m
<C-W>g<C-]>	.\tagselect.vim	/^  nnoremap <silent> <C-W>g<C-]> :Stjump <cword><CR>$/;"	m
<C-W>g<C-]>	.\tagselect.vim	/^  vnoremap <silent> <C-W>g<C-]> :<C-U>call <SID>TagSelectVisual('stjump')<CR>$/;"	m
<C-W>g]	.\tagselect.vim	/^  nnoremap <silent> <C-W>g] :Stselect <cword><CR>$/;"	m
<C-W>g]	.\tagselect.vim	/^  vnoremap <silent> <C-W>g] :<C-U>call <SID>TagSelectVisual('stselect')<CR>$/;"	m
<C-d>	init.vim	/^nnoremap <C-d> <C-d>zz$/;"	m
<C-f>	init.vim	/^imap <silent><expr> <C-f> '<Plug>luasnip-expand-or-jump'$/;"	m
<C-k>	init.vim	/^map <C-k> :cn<CR>zz$/;"	m
<C-l>	init.vim	/^map <C-l> :cp<CR>zz$/;"	m
<C-n>	init.vim	/^inoremap <expr> <C-n>  deoplete#manual_complete()$/;"	m
<C-t>	init.vim	/^nnoremap <C-t> :NERDTreeToggle<CR>$/;"	m
<C-u>	init.vim	/^nnoremap <C-u> <C-u>zz$/;"	m
<End>	init.vim	/^inoremap <End> <C-o>\$$/;"	m
<End>	init.vim	/^map <End> \$$/;"	m
<Esc>	init.vim	/^nnoremap <Esc> <C-\\><C-n>$/;"	m
<F10>	init.vim	/^nnoremap <silent> <F10> :w <bar> Make f10<CR><cr>$/;"	m
<F11>	init.vim	/^nnoremap <silent> <F11> :w <bar> Make f11<CR><cr>$/;"	m
<F12>	init.vim	/^nnoremap <silent> <F12> :w <bar> Make f12<CR><cr>$/;"	m
<F1>	init.vim	/^nnoremap <silent> <F1> :w <bar> Make f1<CR><cr>$/;"	m
<F2>	init.vim	/^nnoremap <silent> <F2> :w <bar> Make f2<CR><cr>$/;"	m
<F3>	init.vim	/^nnoremap <silent> <F3> :w <bar> Make f3<CR><cr>$/;"	m
<F4>	init.vim	/^nnoremap <silent> <F4> :w <bar> Make f4<CR><cr>$/;"	m
<F5>	init.vim	/^nnoremap <silent> <F5> :w <bar> Make f5<CR><cr>$/;"	m
<F6>	init.vim	/^nnoremap <silent> <F6> :w <bar> Make f6<CR><cr>$/;"	m
<F7>	init.vim	/^nnoremap <silent> <F7> :w <bar> Make f7<CR><cr>$/;"	m
<F8>	init.vim	/^nnoremap <silent> <F8> :w <bar> Make f8<CR><cr>$/;"	m
<F9>	init.vim	/^nnoremap <silent> <F9> :w <bar> Make f9<CR><cr>$/;"	m
<Home>	init.vim	/^inoremap <Home> <C-o>^$/;"	m
<Home>	init.vim	/^map <Home> ^$/;"	m
<Leader><Leader>	init.vim	/^map <Leader><Leader> <Plug>(easymotion-s2)$/;"	m
<Leader>h	init.vim	/^nnoremap <Leader>h <cmd>split<cr>$/;"	m
<Leader>k	init.vim	/^map <Leader>k <Plug>(easymotion-j)$/;"	m
<Leader>l	init.vim	/^map <Leader>l <Plug>(easymotion-k)$/;"	m
<Leader>v	init.vim	/^nnoremap <Leader>v <cmd>vsplit<cr>$/;"	m
<SPACE>	init.vim	/^nnoremap <SPACE> <Nop>$/;"	m
<bs>	init.vim	/^nnoremap <bs> <Plug>Sneak_,$/;"	m
<bs>	init.vim	/^vnoremap <bs> <Plug>Sneak_,$/;"	m
<c-n>	init.vim	/^nmap <c-n> <plug>(YoinkPostPasteSwapBack)$/;"	m
<c-p>	init.vim	/^nmap <c-p> <plug>(YoinkPostPasteSwapForward)$/;"	m
<leader>/	init.vim	/^nnoremap <leader>\/ <cmd>nohlsearch<CR> $/;"	m
<leader>:	init.vim	/^map <leader>: <Plug>Sneak_t$/;"	m
<leader>;	init.vim	/^map <leader>; <Plug>Sneak_f$/;"	m
<leader><cr>	init.vim	/^map <leader><cr> i<cr><ESC>$/;"	m
<leader>J	init.vim	/^map <leader>J <Plug>Sneak_T$/;"	m
<leader>SS	init.vim	/^nmap <leader>SS <plug>(SubversiveSubstituteWordRange)$/;"	m
<leader>dam	init.vim	/^nnoremap <silent> <leader>dam :delm! <bar> delm A-Z0-9 <bar> SignatureRefresh<cr>$/;"	m
<leader>j	init.vim	/^map <leader>j <Plug>Sneak_F$/;"	m
<leader>s	init.vim	/^nmap <leader>s <plug>(SubversiveSubstituteRange)$/;"	m
<leader>td	init.vim	/^nmap <leader>td :bdelete<cr>$/;"	m
<leader>tq	init.vim	/^nmap <leader>tq :ClearQuickfixList<cr>$/;"	m
<leader>u	init.vim	/^nnoremap <leader>u :UndotreeToggle<CR>$/;"	m
<tab>	init.vim	/^nnoremap <tab> <Plug>Sneak_;$/;"	m
<tab>	init.vim	/^vnoremap <tab> <Plug>Sneak_;$/;"	m
B	init.vim	/^map <silent> B <Plug>CamelCaseMotion_b$/;"	m
ClearQuickfixList	init.vim	/^command! ClearQuickfixList cexpr []$/;"	c
E	init.vim	/^map <silent> E <Plug>CamelCaseMotion_e$/;"	m
GetTagIndxUnderCursor	.\tagselect.vim	/^function! s:GetTagIndxUnderCursor() " {{{$/;"	f
Grep	init.vim	/^command! -nargs=+ -complete=file_in_path -bar Grep  cgetexpr Grep(<f-args>)$/;"	c
Grep	init.vim	/^function! Grep(...)$/;"	f
GrepWordUnderCursor	init.vim	/^function! GrepWordUnderCursor()$/;"	f
HH	init.vim	/^nnoremap <silent> HH :call OpenHeaderInSideWindow()<cr>$/;"	m
HeaderToggle	init.vim	/^function! HeaderToggle()$/;"	f
IndentWithI	init.vim	/^function! IndentWithI()$/;"	f
InputTagIndex	.\tagselect.vim	/^function! s:InputTagIndex()$/;"	f
InsertText	init.vim	/^function! InsertText(text)$/;"	f
K	init.vim	/^map <silent> K `]zz$/;"	m
L	init.vim	/^map <silent> L `[zz$/;"	m
LGrep	init.vim	/^command! -nargs=+ -complete=file_in_path -bar LGrep lgetexpr Grep(<f-args>)$/;"	c
M.peek_definition	.\lua\lsp-ext.lua	/^function M.peek_definition()$/;"	f
M.preview_location	.\lua\lsp-ext.lua	/^function M.preview_location(location, context, before_context)$/;"	f
M.preview_location_callback	.\lua\lsp-ext.lua	/^function M.preview_location_callback(_, method, result)$/;"	f
N	init.vim	/^nnoremap N Nzzzv$/;"	m
OpenHeaderInSideWindow	init.vim	/^function! OpenHeaderInSideWindow()$/;"	f
P	init.vim	/^nmap P <plug>(YoinkPaste_P)$/;"	m
Prompt	.\tagselect.vim	/^function! s:Prompt(bufNr)$/;"	f
Quit	.\tagselect.vim	/^function! s:Quit()$/;"	f
ReplaceWordInAllFiles	init.vim	/^function! ReplaceWordInAllFiles()$/;"	f
ReplaceWordInAllFilesWithPrompt	init.vim	/^function! ReplaceWordInAllFilesWithPrompt()$/;"	f
S	init.vim	/^nmap S <plug>(SubversiveSubstituteToEndOfLine)$/;"	m
SelectTag	.\tagselect.vim	/^function! s:SelectTag(cmd, tagCount, bang)$/;"	f
SelectTagCount	.\tagselect.vim	/^function! s:SelectTagCount(tagCount, bang)$/;"	f
SelectTagUnderCursor	.\tagselect.vim	/^function! s:SelectTagUnderCursor(bang)$/;"	f
SessionLoad	.\Session.vim	/^let SessionLoad = 1$/;"	v
SetCSSettings	init.vim	/^function! SetCSSettings()$/;"	f
SetCSettings	init.vim	/^function! SetCSettings()$/;"	f
SetupBuf	.\tagselect.vim	/^function! s:SetupBuf() " {{{$/;"	f
Stjump	.\tagselect.vim	/^command! -nargs=? -complete=tag Stjump :call <SID>TagSelectMain('stjump',$/;"	c
Stselect	.\tagselect.vim	/^command! -nargs=? -complete=tag Stselect :call <SID>TagSelectMain('stselect',$/;"	c
TagSelectMain	.\tagselect.vim	/^function! s:TagSelectMain(cmd, ...) " {{{$/;"	f
TagSelectVisual	.\tagselect.vim	/^function! s:TagSelectVisual(tagCmd) " {{{$/;"	f
Tags	.\tagselect.vim	/^command! -nargs=0 Tags :call <SID>TagSelectMain('tags')$/;"	c
Tjump	.\tagselect.vim	/^command! -nargs=? -complete=tag Tjump :call <SID>TagSelectMain('tjump',$/;"	c
ToggleQuickFix	init.vim	/^function! ToggleQuickFix()$/;"	f
Tselect	.\tagselect.vim	/^command! -nargs=? -complete=tag Tselect :call <SID>TagSelectMain('tselect',$/;"	c
TselectCword	init.vim	/^command! TselectCword execute 'tselect' expand('<cword>')$/;"	c
W	init.vim	/^map <silent> W <Plug>CamelCaseMotion_w$/;"	m
X	init.vim	/^nnoremap X D$/;"	m
["<S-Tab>"] 	.\nvim-cmp.lua	/^        ["<S-Tab>"] = cmp.mapping(function()$/;"	f
["<Tab>"] 	.\nvim-cmp.lua	/^        ["<Tab>"] = cmp.mapping(function(fallback)$/;"	f
[y	init.vim	/^nmap [y <plug>(YoinkRotateBack)$/;"	m
]y	init.vim	/^nmap ]y <plug>(YoinkRotateForward)$/;"	m
aa	init.vim	/^omap aa <plug>Argumentative_OpPendingOuterTextObject$/;"	m
build_prim	.\colors\handmade.vim	/^function! s:build_prim(hi_elem, field)$/;"	f
cC	init.vim	/^nmap cC ^cg_$/;"	m
c_commands	init.vim	/^augroup c_commands$/;"	a
csharp_commands	init.vim	/^augroup csharp_commands$/;"	a
dD	init.vim	/^nmap dD ^dg_$/;"	m
dam	init.vim	/^nnoremap <silent> dam :delm! <bar> SignatureRefresh<cr>$/;"	m
enabled 	.\nvim-cmp.lua	/^    enabled = function()$/;"	f
expand 	.\nvim-cmp.lua	/^        expand = function(args)$/;"	f
fb	init.vim	/^nnoremap fb <cmd>Telescope buffers<cr>$/;"	m
fd	init.vim	/^nnoremap fd :e#<CR>$/;"	m
ff	init.vim	/^nmap <silent> ff :lua require'telescope.builtin'.find_files{no_ignore=true}<cr>$/;"	m
ff	init.vim	/^nnoremap ff <cmd>Telescope find_files<cr>$/;"	m
fg	init.vim	/^nnoremap fg :call GrepWordUnderCursor()<CR>$/;"	m
fh	init.vim	/^nnoremap fh <cmd>Telescope harpoon marks<cr>$/;"	m
fl	init.vim	/^nmap <silent> fl :lua require'telescope.builtin'.live_grep{ vimgrep_arguments = { 'rg', '--color=never', '--no-heading', '--with-filename', '--line-number', '--column', '--smart-case', '-u' } }<cr>$/;"	m
fl	init.vim	/^nnoremap fl <cmd>Telescope live_grep<cr>$/;"	m
fm	init.vim	/^nnoremap fm <cmd>Telescope marks<cr>$/;"	m
fp	init.vim	/^nnoremap fp <cmd>lua require'telescope'.extensions.project.project{}<cr>$/;"	m
fq	init.vim	/^nnoremap fq <cmd>Telescope quickfix<cr>$/;"	m
fr	init.vim	/^nnoremap fr <cmd>Telescope resume<cr>$/;"	m
ft	init.vim	/^nnoremap ft <cmd>Telescope tags<cr>$/;"	m
g:EasyMotion_do_mapping	init.vim	/^let g:EasyMotion_do_mapping = 0 " Disable default mappings$/;"	v
g:EasyMotion_smartcase	init.vim	/^let g:EasyMotion_smartcase = 1$/;"	v
g:Hexokinase_highlighters	init.vim	/^let g:Hexokinase_highlighters = ['virtual']$/;"	v
g:OmniSharp_highlighting	init.vim	/^let g:OmniSharp_highlighting = 0$/;"	v
g:OmniSharp_server_stdio	init.vim	/^let g:OmniSharp_server_stdio = 1$/;"	v
g:clang_format#style_options	init.vim	/^let g:clang_format#style_options = {$/;"	v
g:colors_name	.\colors\handmade.vim	/^let g:colors_name = "patatetoy"$/;"	v
g:compiler	init.vim	/^let g:compiler = 'msvc'$/;"	v
g:context_highlight_border	init.vim	/^let g:context_highlight_border = 'Comment'$/;"	v
g:context_highlight_normal	init.vim	/^let g:context_highlight_normal = 'Normal'$/;"	v
g:context_highlight_tag	init.vim	/^let g:context_highlight_tag    = 'Special'$/;"	v
g:context_max_height	init.vim	/^let g:context_max_height = 2$/;"	v
g:context_max_join_parts	init.vim	/^let g:context_max_join_parts = 0$/;"	v
g:context_max_per_indent	init.vim	/^let g:context_max_per_indent = 1$/;"	v
g:cursorhold_updatetime	init.vim	/^let g:cursorhold_updatetime = 100$/;"	v
g:deoplete#enable_at_startup	init.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#smart_case	init.vim	/^let g:deoplete#smart_case = v:true$/;"	v
g:deoplete#sources#clang#clang_header	init.vim	/^    let g:deoplete#sources#clang#clang_header = 'C:\\\\Program Files\\\\LLVM\\\\lib\\\\clang'$/;"	v
g:deoplete#sources#clang#filter_availability_kinds	init.vim	/^let g:deoplete#sources#clang#filter_availability_kinds = ['NotAvailable', 'NotAccessible']$/;"	v
g:deoplete#sources#clang#flags	init.vim	/^let g:deoplete#sources#clang#flags = ['-x', 'c']$/;"	v
g:deoplete#sources#clang#libclang_path	init.vim	/^    let g:deoplete#sources#clang#libclang_path = 'C:\\\\Program Files\\\\LLVM\\\\bin\\\\libclang.dll'$/;"	v
g:deoplete#sources#clang#sort_algo	init.vim	/^let g:deoplete#sources#clang#sort_algo = 'priority'$/;"	v
g:deoplete#sources#jedi#show_docstring	init.vim	/^let g:deoplete#sources#jedi#show_docstring = 1$/;"	v
g:echodoc#enable_at_startup	init.vim	/^let g:echodoc#enable_at_startup = 1$/;"	v
g:echodoc#type	init.vim	/^let g:echodoc#type = 'floating'$/;"	v
g:indentLine_color_gui	init.vim	/^let g:indentLine_color_gui = '#262626'$/;"	v
g:indentLine_leadingSpaceEnabled	init.vim	/^let g:indentLine_leadingSpaceEnabled = 0$/;"	v
g:python3_host_prog	init.vim	/^    let g:python3_host_prog = 'C:\\Program Files\\Python311\\python.exe'$/;"	v
g:sneak#use_ic_scs	init.vim	/^let g:sneak#use_ic_scs = 1$/;"	v
g:tagselectExpandCurWord	.\tagselect.vim	/^  let g:tagselectExpandCurWord = 1$/;"	v
g:tagselectWinSize	.\tagselect.vim	/^  let g:tagselectWinSize = -1$/;"	v
g:terminator_split_location	init.vim	/^let g:terminator_split_location = 'vertical belowright'$/;"	v
g:this_obsession	.\Session.vim	/^let g:this_obsession = v:this_session$/;"	v
g:this_session	.\Session.vim	/^let g:this_session = v:this_session$/;"	v
g:yoinkIncludeDeleteOperations	init.vim	/^let g:yoinkIncludeDeleteOperations=1 $/;"	v
g<C-]>	.\tagselect.vim	/^  nnoremap <silent> g<C-]> :Tjump <cword><CR>$/;"	m
g<C-]>	.\tagselect.vim	/^  vnoremap <silent> g<C-]> :<C-U>call <SID>TagSelectVisual('tjump')<CR>$/;"	m
gP	init.vim	/^nmap gP <plug>(YoinkPaste_gP)$/;"	m
gP	init.vim	/^nnoremap gP <cmd>PreviewClose<cr>$/;"	m
g]	.\tagselect.vim	/^  nnoremap <silent> g] :Tselect <cword><CR>$/;"	m
g]	.\tagselect.vim	/^  vnoremap <silent> g] :<C-U>call <SID>TagSelectVisual('tselect')<CR>$/;"	m
ge	init.vim	/^map <silent> ge <Plug>CamelCaseMotion_ge$/;"	m
gp	init.vim	/^nmap gp <plug>(YoinkPaste_gp)$/;"	m
gp	init.vim	/^nnoremap gp <cmd>PreviewTag<cr>$/;"	m
gr	init.vim	/^nnoremap gr gd[{V%::s\/<C-R>\/\/\/gc<left><left><left>$/;"	m
grep	init.vim	/^cnoreabbrev <expr> grep  (getcmdtype() ==# ':' && getcmdline() ==# 'grep')  ? 'Grep'  : 'grep'$/;"	m
gt	init.vim	/^nmap gt <cmd>TselectCword<cr>$/;"	m
h1	init.vim	/^nnoremap h1 <cmd>lua require("harpoon.ui").nav_file(1)<cr> $/;"	m
h2	init.vim	/^nnoremap h2 <cmd>lua require("harpoon.ui").nav_file(2)<cr> $/;"	m
h3	init.vim	/^nnoremap h3 <cmd>lua require("harpoon.ui").nav_file(3)<cr> $/;"	m
h4	init.vim	/^nnoremap h4 <cmd>lua require("harpoon.ui").nav_file(4)<cr> $/;"	m
h5	init.vim	/^nnoremap h5 <cmd>lua require("harpoon.ui").nav_file(5)<cr> $/;"	m
h6	init.vim	/^nnoremap h6 <cmd>lua require("harpoon.ui").nav_file(6)<cr> $/;"	m
h7	init.vim	/^nnoremap h7 <cmd>lua require("harpoon.ui").nav_file(7)<cr> $/;"	m
h8	init.vim	/^nnoremap h8 <cmd>lua require("harpoon.ui").nav_file(8)<cr> $/;"	m
h9	init.vim	/^nnoremap h9 <cmd>lua require("harpoon.ui").nav_file(9)<cr> $/;"	m
h;	init.vim	/^nnoremap h; <cmd>lua require("harpoon.ui").toggle_quick_menu()<cr>$/;"	m
ha	init.vim	/^nnoremap ha <cmd>lua require("harpoon.mark").add_file()<cr>$/;"	m
hh	init.vim	/^nnoremap <silent> hh <cmd>call HeaderToggle()<cr>$/;"	m
hn	init.vim	/^nnoremap hn <cmd>lua require("harpoon.ui").nav_next()<cr> $/;"	m
hp	init.vim	/^nnoremap hp <cmd>lua require("harpoon.ui").nav_prev()<cr> $/;"	m
i	init.vim	/^nnoremap <expr> i IndentWithI()$/;"	m
ia	init.vim	/^omap ia <plug>Argumentative_OpPendingInnerTextObject$/;"	m
j	init.vim	/^noremap j h$/;"	m
k	init.vim	/^noremap k gj$/;"	m
k	init.vim	/^noremap k j$/;"	m
l	init.vim	/^noremap l gk$/;"	m
l	init.vim	/^noremap l k$/;"	m
lgrep	init.vim	/^cnoreabbrev <expr> lgrep (getcmdtype() ==# ':' && getcmdline() ==# 'lgrep') ? 'LGrep' : 'lgrep'$/;"	m
loaded_tagselect	.\tagselect.vim	/^let loaded_tagselect=100$/;"	v
local f 	.\luasnip.lua	/^local f = ls.function_node$/;"	f
local feedkey 	.\nvim-cmp.lua	/^local feedkey = function(key, mode)$/;"	f
local has_words_before 	.\nvim-cmp.lua	/^local has_words_before = function()$/;"	f
local on_attach 	.\lsp.lua	/^local on_attach = function(client, bufnr)$/;"	f
mapleader	init.vim	/^let mapleader=" "$/;"	v
n	init.vim	/^nnoremap n nzzzv$/;"	m
p	init.vim	/^nmap p <plug>(YoinkPaste_p)$/;"	m
s	init.vim	/^nmap s <plug>(SubversiveSubstitute)$/;"	m
s:b	.\colors\handmade.vim	/^let s:b      = ",bold"$/;"	v
s:bg_none	.\colors\handmade.vim	/^let s:bg_none = ' guibg=NONE ctermbg=NONE'$/;"	v
s:bg_normal	.\colors\handmade.vim	/^  let s:bg_normal = s:bg_background$/;"	v
s:bg_normal	.\colors\handmade.vim	/^  let s:bg_normal = s:bg_none$/;"	v
s:c	.\colors\handmade.vim	/^let s:c      = ",undercurl"$/;"	v
s:cterm_aqua	.\colors\handmade.vim	/^  let s:cterm_aqua       = "109"$/;"	v
s:cterm_aqua	.\colors\handmade.vim	/^  let s:cterm_aqua       = "14"  " LightCyan$/;"	v
s:cterm_blue	.\colors\handmade.vim	/^  let s:cterm_blue       = "110"$/;"	v
s:cterm_blue	.\colors\handmade.vim	/^  let s:cterm_blue       = "12"  " LightBlue$/;"	v
s:cterm_comment	.\colors\handmade.vim	/^  let s:cterm_comment    = "243"$/;"	v
s:cterm_comment	.\colors\handmade.vim	/^  let s:cterm_comment    = "8"   " LightGrey$/;"	v
s:cterm_delbg	.\colors\handmade.vim	/^  let s:cterm_delbg      = "167"$/;"	v
s:cterm_delbg	.\colors\handmade.vim	/^  let s:cterm_delbg      = "9"   " LightRed$/;"	v
s:cterm_foreground	.\colors\handmade.vim	/^  let s:cterm_foreground = "250"$/;"	v
s:cterm_foreground	.\colors\handmade.vim	/^  let s:cterm_foreground = "7"   " White$/;"	v
s:cterm_green	.\colors\handmade.vim	/^  let s:cterm_green      = "10"  " LightGreen$/;"	v
s:cterm_green	.\colors\handmade.vim	/^  let s:cterm_green      = "143"$/;"	v
s:cterm_line	.\colors\handmade.vim	/^  let s:cterm_line       = "0"   " Black$/;"	v
s:cterm_line	.\colors\handmade.vim	/^  let s:cterm_line       = "235"$/;"	v
s:cterm_orange	.\colors\handmade.vim	/^  let s:cterm_orange     = "173"$/;"	v
s:cterm_orange	.\colors\handmade.vim	/^  let s:cterm_orange     = "3"   " DarkYellow$/;"	v
s:cterm_purple	.\colors\handmade.vim	/^  let s:cterm_purple     = "13"  " LightMagenta$/;"	v
s:cterm_purple	.\colors\handmade.vim	/^  let s:cterm_purple     = "139"$/;"	v
s:cterm_red	.\colors\handmade.vim	/^  let s:cterm_red        = "167"$/;"	v
s:cterm_red	.\colors\handmade.vim	/^  let s:cterm_red        = "9"   " LightRed$/;"	v
s:cterm_selection	.\colors\handmade.vim	/^  let s:cterm_selection  = "237"$/;"	v
s:cterm_selection	.\colors\handmade.vim	/^  let s:cterm_selection  = "8"   " DarkGrey$/;"	v
s:cterm_yellow	.\colors\handmade.vim	/^  let s:cterm_yellow     = "11"  " LightYellow$/;"	v
s:cterm_yellow	.\colors\handmade.vim	/^  let s:cterm_yellow     = "221"$/;"	v
s:curTagName	.\tagselect.vim	/^let s:curTagName = ''$/;"	v
s:fg_none	.\colors\handmade.vim	/^let s:fg_none = ' guifg=NONE ctermfg=NONE'$/;"	v
s:gui_background	.\colors\handmade.vim	/^  let s:gui_background = "#0c0c0c"$/;"	v
s:gui_black	.\colors\handmade.vim	/^  let s:gui_black    = "#000000"$/;"	v
s:gui_comment	.\colors\handmade.vim	/^  let s:gui_comment    = "#606060"$/;"	v
s:gui_line	.\colors\handmade.vim	/^  let s:gui_line       = "#282a2e"$/;"	v
s:gui_selection	.\colors\handmade.vim	/^  let s:gui_selection  = "#373b41"$/;"	v
s:i	.\colors\handmade.vim	/^let s:i      = ",italic"$/;"	v
s:l	.\Session.vim	/^let s:l = 280 - ((19 * winheight(0) + 33) \/ 67)$/;"	v
s:l	.\Session.vim	/^let s:l = 38 - ((21 * winheight(0) + 33) \/ 67)$/;"	v
s:l	.\Session.vim	/^let s:l = 64 - ((28 * winheight(0) + 33) \/ 67)$/;"	v
s:myBufNum	.\tagselect.vim	/^let s:myBufNum = -1$/;"	v
s:n	.\colors\handmade.vim	/^let s:n      = "NONE"$/;"	v
s:nextTagPat	.\tagselect.vim	/^let s:nextTagPat = '^\\s\\{0,2}\\d\\+'$/;"	v
s:none	.\colors\handmade.vim	/^let s:none   = "NONE"$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette = {'gui' : {} , 'cterm' : {}}$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.addbg      = { 'dark' : "65"               , 'light' : "194" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.addfg      = { 'dark' : "193"              , 'light' : "22"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.aqua       = { 'dark' : s:cterm_aqua       , 'light' : "23"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.background = { 'dark' : "234"              , 'light' : "254" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.blue       = { 'dark' : s:cterm_blue       , 'light' : "17"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.changebg   = { 'dark' : "60"               , 'light' : "189" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.changefg   = { 'dark' : "189"              , 'light' : "53"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.comment    = { 'dark' : s:cterm_comment    , 'light' : "59"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.darkblue   = { 'dark' : "17"               , 'light' : "194" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.darkcolumn = { 'dark' : "234"              , 'light' : "244" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.darkcyan   = { 'dark' : "24"               , 'light' : "22"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.darkpurple = { 'dark' : "53"               , 'light' : "53"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.darkred    = { 'dark' : "52"               , 'light' : "189" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.delbg      = { 'dark' : s:cterm_delbg      , 'light' : "224" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.foreground = { 'dark' : s:cterm_foreground , 'light' : "16"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.green      = { 'dark' : s:cterm_green      , 'light' : "22"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.line       = { 'dark' : s:cterm_line       , 'light' : "252" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.orange     = { 'dark' : s:cterm_orange     , 'light' : "94"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.purple     = { 'dark' : s:cterm_purple     , 'light' : "53"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.red        = { 'dark' : s:cterm_red        , 'light' : "52"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.selection  = { 'dark' : s:cterm_selection  , 'light' : "250" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.window     = { 'dark' : "236"              , 'light' : "247" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.cterm.yellow     = { 'dark' : s:cterm_yellow     , 'light' : "58"  }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.addbg      = { 'dark' : "#5F875F"        , 'light' : "#d7ffd7" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.addfg      = { 'dark' : "#d7ffaf"        , 'light' : "#005f00" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.aqua       = { 'dark' : "#649792"        , 'light' : "#005f5f" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.background = { 'dark' : s:gui_background , 'light' : "#e4e4e4" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.blue       = { 'dark' : "#649792"        , 'light' : "#00005f" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.changebg   = { 'dark' : "#5F5F87"        , 'light' : "#d7d7ff" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.changefg   = { 'dark' : "#d7d7ff"        , 'light' : "#5f005f" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.comment    = { 'dark' : s:gui_comment    , 'light' : "#5f5f5f" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.darkblue   = { 'dark' : "#00005f"        , 'light' : "#d7ffd7" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.darkcolumn = { 'dark' : "#000000"        , 'light' : "#808080" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.darkcyan   = { 'dark' : "#005f5f"        , 'light' : "#005f00" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.darkpurple = { 'dark' : "#5f005f"        , 'light' : "#5f005f" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.darkred    = { 'dark' : "#5f0000"        , 'light' : "#d7d7ff" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.delbg      = { 'dark' : "#cc6666"        , 'light' : "#ffd7d7" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.foreground = { 'dark' : "#bf9d73"        , 'light' : "#000000" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.green      = { 'dark' : "#7f9a59"        , 'light' : "#005f00" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.line       = { 'dark' : s:gui_line       , 'light' : "#d0d0d0" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.orange     = { 'dark' : "#8f723d"        , 'light' : "#875f00" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.purple     = { 'dark' : "#b294bb"        , 'light' : "#5f005f" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.red        = { 'dark' : "#ca7768"        , 'light' : "#5f0000" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.selection  = { 'dark' : s:gui_selection  , 'light' : "#bcbcbc" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.window     = { 'dark' : "#303030"        , 'light' : "#9e9e9e" }$/;"	v
s:palette	.\colors\handmade.vim	/^let s:palette.gui.yellow     = { 'dark' : "#cea046"        , 'light' : "#5f5f00" }$/;"	v
s:r	.\colors\handmade.vim	/^let s:r      = ",reverse"$/;"	v
s:s	.\colors\handmade.vim	/^let s:s      = ",standout"$/;"	v
s:save_cpo	.\tagselect.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_splitbelow	.\Session.vim	/^let s:save_splitbelow = &splitbelow$/;"	v
s:save_splitright	.\Session.vim	/^let s:save_splitright = &splitright$/;"	v
s:save_winminheight	.\Session.vim	/^let s:save_winminheight = &winminheight$/;"	v
s:save_winminwidth	.\Session.vim	/^let s:save_winminwidth = &winminwidth$/;"	v
s:shortmess_save	.\Session.vim	/^let s:shortmess_save = &shortmess$/;"	v
s:so_save	.\Session.vim	/^let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1$/;"	v
s:style	.\colors\handmade.vim	/^let s:style = &background$/;"	v
s:sx	.\Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:t_none	.\colors\handmade.vim	/^let s:t_none = "NONE"$/;"	v
s:title	.\tagselect.vim	/^let s:title = '[Tag Select]'$/;"	v
s:u	.\colors\handmade.vim	/^let s:u      = ",underline"$/;"	v
s:wipebuf	.\Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
ss	init.vim	/^nmap ss <plug>(SubversiveSubstituteLine)$/;"	m
t/	init.vim	/^nnoremap t\/ <cmd>bnext<cr>$/;"	m
t1	init.vim	/^nnoremap t1 1gt$/;"	m
t2	init.vim	/^nnoremap t2 2gt$/;"	m
t3	init.vim	/^nnoremap t3 3gt$/;"	m
t4	init.vim	/^nnoremap t4 4gt$/;"	m
t5	init.vim	/^nnoremap t5 5gt$/;"	m
t6	init.vim	/^nnoremap t6 6gt$/;"	m
t7	init.vim	/^nnoremap t7 7gt$/;"	m
t8	init.vim	/^nnoremap t8 8gt$/;"	m
t9	init.vim	/^nnoremap t9 9gt$/;"	m
t;	init.vim	/^nnoremap t; <C-W><C-L>$/;"	m
tP	init.vim	/^nnoremap tP <cmd>tabm +1<cr>$/;"	m
tU	init.vim	/^nnoremap tU <cmd>tabm -1<cr>$/;"	m
tc	init.vim	/^nnoremap tc <cmd>tabclose<cr>$/;"	m
tj	init.vim	/^nnoremap tj <C-W><C-H>$/;"	m
tk	init.vim	/^nnoremap tk <C-W><C-J>$/;"	m
tl	init.vim	/^nnoremap tl <C-W><C-K>$/;"	m
tm	init.vim	/^nnoremap tm <cmd>bprev<cr>$/;"	m
tn	init.vim	/^nnoremap tn <cmd>tn<CR>$/;"	m
to	init.vim	/^nnoremap to <cmd>tabnew<cr>$/;"	m
tp	init.vim	/^nnoremap tp <cmd>tabnext<cr>$/;"	m
tp	init.vim	/^nnoremap tp <cmd>tp<CR>$/;"	m
tq	init.vim	/^nnoremap <silent> tq :call ToggleQuickFix()<cr>$/;"	m
ts	init.vim	/^nnoremap ts <C-W>r $/;"	m
tu	init.vim	/^nnoremap tu <cmd>tabprevious<cr>$/;"	m
vim.lsp.handlers["textDocument/publishDiagnostics"] 	.\lsp.lua	/^vim.lsp.handlers["textDocument\/publishDiagnostics"] = function() end$/;"	f
x	init.vim	/^nnoremap x d$/;"	m
xX	init.vim	/^nmap xX ^xg_$/;"	m
xx	init.vim	/^nnoremap xx dd$/;"	m
yY	init.vim	/^nmap yY ^yg_$/;"	m
zt	.\Session.vim	/^normal! zt$/;"	m
